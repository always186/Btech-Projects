<!DOCTYPE html>
<!--html5-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!-->
<html class=" js no-touch boxshadow opacity fontface svg inlinesvg svgclippaths no-ie8compat" style="" lang="en"><!--<![endif]--><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
  	<meta charset="utf-8">

	<title>Arduino - WiFiWebServer </title>
	<link rel="shortcut icon" type="image/x-icon" href="https://www.arduino.cc/en/favicon.png">

	<script id="facebook-jssdk" src="Arduino%20-%20WiFiWebServer_files/sdk.js"></script><script async="" src="Arduino%20-%20WiFiWebServer_files/fbevents.js"></script><script type="text/javascript" async="" src="Arduino%20-%20WiFiWebServer_files/ga.js"></script><script src="Arduino%20-%20WiFiWebServer_files/analytics"></script><script src="Arduino%20-%20WiFiWebServer_files/analytics"></script><script src="Arduino%20-%20WiFiWebServer_files/analytics"></script><script src="Arduino%20-%20WiFiWebServer_files/jquery-1.js"></script><span>@media print {#ghostery-purple-box {display:none !important}}</span>

	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/galleria.css" id="galleria-theme"><link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/fonts.css" type="text/css">
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/arduino-icons.css">
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/animation.css"><!--[if IE 7]>
	<link rel="stylesheet" href="//arduino.cc/css/arduino-icons-ie7.css"><![endif]-->
	<!--[if gte IE 9]><!-->
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/foundation2.css" type="text/css">
	<!--<![endif]-->
	<!--[if IE 8]>
		<link rel='stylesheet' href='//arduino.cc/css/foundation_ie8.css' type='text/css' />
	<![endif]-->
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/arduino_code_highlight.css" type="text/css">
	<link rel="stylesheet" type="text/css" media="screen" href="Arduino%20-%20WiFiWebServer_files/typeplate.css">
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/arduinoWide_SSO.css" type="text/css">

	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/common.css" type="text/css">
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/download_page.css">
	<link href="https://plus.google.com/114839908922424087554" rel="publisher">

	<!-- embedded JS and CSS from PmWiki plugins -->	
	<!--HeaderText--><style type="text/css"><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code { white-space: nowrap; }
  .vspace { margin-top:1.33em; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 5px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
div.toc p { background-color: #f9f6d6;
    margin-top:-5px;   padding-top: 5px;
    margin-left:-5px;  padding-left: 5px;
    margin-right:-5px; padding-right: 5px;
    padding-bottom: 3px;
    border-bottom:  1px dotted #cccccc; }.editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  table.markup { border: 2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  td.markup1 { border-bottom: 1px solid #ccf; }
  div.faq { margin-left:2em; }
  div.faq p.question { margin: 1em 0 0.75em -2em; font-weight:bold; }
  div.faq hr { margin-left: -2em; }
   
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }
/**
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 */
.arduino  {font-family:monospace;}
.arduino .imp {font-weight: bold; color: red;}
.arduino .kw1 {color: #CC6600;}
.arduino .kw2 {color: #006699;}
.arduino .kw3 {color: #CC6600; font-weight: bold;}
.arduino .co1 {color: #7E7E7E; font-style: italic;}
.arduino .co2 {color: #7E7E7E;}
.arduino .coMULTI {color: #7E7E7E; font-style: italic;}
.arduino .es0 {color: #000099; font-weight: bold;}
.arduino .es1 {color: #000099; font-weight: bold;}
.arduino .es2 {color: #660099; font-weight: bold;}
.arduino .es3 {color: #660099; font-weight: bold;}
.arduino .es4 {color: #660099; font-weight: bold;}
.arduino .es5 {color: #006699; font-weight: bold;}
.arduino .br0 {color: #000000;}
.arduino .sy0 {color: #000000;}
.arduino .st0 {color: #0066CC;}
.arduino .nu0 {color: #000000;}
.arduino .nu6 {color: #208080;}
.arduino .nu8 {color: #208080;}
.arduino .nu12 {color: #208080;}
.arduino .nu16 {color:#800080;}
.arduino .nu17 {color:#800080;}
.arduino .nu18 {color:#800080;}
.arduino .nu19 {color:#800080;}
.arduino .me1 {color: #ff1493;}
.arduino .me2 {color: #ff1493;}
.arduino span.xtra { display:block; }

.sourceblocklink {
  text-align: right;
  font-size: smaller;
}
.sourceblocktext {
  padding: 0.5em;
  color: #000000;
  background-color: #ECF1F1;
}
.sourceblock .sourceblocktext .arduino {
  font-family: 'TyponineSans Monospace Regular 4';
  font-size: 14px;
  line-height: 18px;
}
code {
  background-color: #ECF1F1;
  font-size: 15px;
  line-height: 19px;
  padding: 2px 10px 5px 10px;
}
.sourceblocktext div {
  font-family: monospace;
  font-size: small;
  line-height: 1;
  height: 1%;
}
.sourceblocktext div.head,
.sourceblocktext div.foot {
  font: italic medium serif;
  padding: 0.5em;
}

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script><script src="Arduino%20-%20WiFiWebServer_files/galleria-1.js"></script><script type="text/javascript">Galleria.loadTheme("//www.arduino.cc/en/pub/galleria/themes/classic/galleria.classic.min.js");</script><script src="Arduino%20-%20WiFiWebServer_files/galleria.js" async="async"></script>  <meta name="robots" content="index,follow">


	<script src="Arduino%20-%20WiFiWebServer_files/custom.js"></script>

	<!-- do not remove none of those lines, comments embedding in pages will break! -->
	<script src="Arduino%20-%20WiFiWebServer_files/jquery-ui.js" type="text/javascript"></script>
	<script src="Arduino%20-%20WiFiWebServer_files/newsletter_subscribe_popup.js" type="text/javascript"></script>
	<script src="Arduino%20-%20WiFiWebServer_files/checkout.js" type="text/javascript"></script>
	<script src="Arduino%20-%20WiFiWebServer_files/software_download.js" type="text/javascript"></script><!-- keep https! -->
	<link rel="stylesheet" href="Arduino%20-%20WiFiWebServer_files/jquery-ui.css" type="text/css">
</head>
<body style="padding-top: 40px;">

	<div id="menuWings" class="fixed" style="display: block;"></div>
	<div id="page">
		
		
<script>
	var userAgent = (navigator.userAgent || navigator.vendor || window.opera).toLowerCase();
	if(userAgent.indexOf('mac')>0){
		$("head").append('<style type="text/css">@-moz-document url-prefix() {h1 a, h2 a, h3 a, h4 a, h5 a, h1 a:hover, h2 a:hover, th a, th a:hover, h3 a:hover, h4 a:hover, h5 a:hover, #wikitext h2 a:hover, #wikitext h3 a:hover, #wikitext h4 a:hover {padding-bottom: 0.5em!important;} #pageheader .search input{font-family: "TyponineSans Regular 18";} #pagefooter .monospace{margin-top: -4px;} #navWrapper ul.left &gt; li{margin-top: -2px; padding-bottom: 2px;}#navWrapper ul.right &gt; li{margin-top: -5px; padding-bottom: 5px;}#navWrapper ul.right &gt; li ul{margin-top: 4px;} .slider-container .fixed-caption p{padding:8px 0 14px 0}}</style>');
	}
</script>

<!--[if IE]>
<link rel='stylesheet' href='https://id.arduino.cc//css/ie-monospace.css' type='text/css' />
<![endif]-->

<div id="menuWings" class="fixed"></div>

<!--[if IE 8]>
<div class="alert-box panel ie8alert">
  <p><strong>Arduino.cc offers limited compatibility for Internet Explorer 8. Get a modern browser as Chrome, Firefox or Safari.</strong></p>
  <a href="" class="close">&times;</a>
</div>
<![endif]-->

<div id="pageheader">
	<div class="row">
		<div class="small-6 large-8 eight columns">
			<div class="title"><a href="https://www.arduino.cc/">Arduino</a></div>
		</div>
		<div class="small-6 large-4 four columns search">
			<div class="row collapse">
				<form method="GET" action="//www.google.com/search">
	<div class="small-12 twelve columns">
		<i class="icon-search-2"></i>
		<input name="ie" value="UTF-8" type="hidden">
		<input name="oe" value="UTF-8" type="hidden">
		<input name="q" size="25" maxlength="255" placeholder="Search the Arduino Website" type="text">
		<input name="btnG" value="search" type="submit">
		<input name="domains" value="http://www.arduino.cc" type="hidden">
		<input name="sitesearch" value="http://www.arduino.cc" type="hidden">
	</div>
</form>			</div>
		</div>
	</div>

	<!--[if gte IE 9]><!-->
	<div id="navWrapper" class="sticky fixed">
	<!--<![endif]-->
	<!--[if IE 8]>
		<div id="navWrapper">
	<![endif]-->
		<nav class="top-bar" data-options="is_hover:true">
			<ul class="title-area">
				<li class="name"></li>
			</ul>

			
		<section class="top-bar-section">
				<ul class="left">
					<li id="navLogo" style="display: block;">
						<a href="https://www.arduino.cc/">
							<img src="Arduino%20-%20WiFiWebServer_files/logo_46.png" alt="userpicture">
						</a>
					</li>
					<li id="navHome" style="display: none;"><a href="https://www.arduino.cc/">Home</a></li>
					<li><a href="https://store.arduino.cc/">Buy</a></li>
					<li><a href="https://www.arduino.cc/en/Main/Software">Download</a></li>
					<li class="has-dropdown not-click"><a href="#">Products</a>
						<ul class="dropdown"><li class="title back js-generated"><h5><a href="#"><span class="backArrow">Back</span></a></h5></li>
							<li><a href="https://www.arduino.cc/en/Main/Products">Arduino <span class="menudescription">(USA only)</span></a></li>
							<li><a href="https://www.arduino.cc/en/Main/GenuinoProducts">Genuino <span class="menudescription">(outside USA)</span></a></li>
							<li><a href="https://www.arduino.cc/en/ArduinoAtHeart/Products">AtHeart</a></li>
							<li><a href="https://www.arduino.cc/en/ArduinoCertified/Products">Certified</a></li>
						</ul>
					</li>
					<li class="has-dropdown active not-click"><a href="#">Learning</a>
						<ul class="dropdown"><li class="title back js-generated"><h5><a href="#"><span class="backArrow">Back</span></a></h5></li>
							<li><a href="https://www.arduino.cc/en/Guide/HomePage">Getting started</a></li>
							<li><a href="https://www.arduino.cc/en/Tutorial/HomePage">Tutorials</a></li>
							<li><a href="https://www.arduino.cc/en/Reference/HomePage">Reference</a></li>
							<li><a href="https://www.arduino.cc/en/Main/CTCprogram">CTC Program</a></li>
							<li><a href="http://playground.arduino.cc/">Playground</a></li>
						</ul>
					</li>
					<li><a href="https://forum.arduino.cc/">Forum</a></li>
					<li class="has-dropdown not-click"><a href="#">Support</a>
						<ul class="dropdown"><li class="title back js-generated"><h5><a href="#"><span class="backArrow">Back</span></a></h5></li>
							<li><a href="https://www.arduino.cc/en/Main/FAQ">FAQ</a></li>
							<li><a href="https://www.arduino.cc/en/ContactUs">Contact Us</a></li>
						</ul>
					</li>
					<li><a href="http://blog.arduino.cc/">Blog</a></li>
				</ul>

								<ul class="right">
					<li><a href="https://id.arduino.cc/auth/login/?returnurl=https%3A%2F%2Fwww.arduino.cc%2Fen%2FTutorial%2FWiFiWebServer" class="cart">LOG IN</a></li>
					<li><a href="https://id.arduino.cc/auth/signup" class="cart">SIGN UP</a></li>
				</ul>
							</section></nav>
	</div>
</div>



		<br class="clear">

		<div id="pagetext">
				<!--PageText-->
<div id="wikitext">
<p class="vspace"></p><p><em>Examples &gt; <span class="wikiword">WiFi</span> Library</em>
</p>
<p class="vspace"></p><h3><span class="wikiword">WiFi</span> Web Server</h3>
<p>In this example, you will use your <span class="wikiword">WiFi</span> Shield and your Arduino to create a simple Web server. Using the <span class="wikiword">WiFi</span> library, your device will be able to answer a HTTP request with your <span class="wikiword">WiFI</span> shield. After opening a browser and navigating to your <span class="wikiword">WiFi</span>
 shield's IP address, your Arduino will respond with just enough HTML 
for a browser to display the input values from all six analog pins.
</p>
<p class="vspace"></p><p>This example is written for a network using WPA encryption. For  WEP or WPA, change the Wifi.begin() call accordingly.
</p>
<p class="vspace"></p><div class="BOM">
<h3>Hardware Required</h3>
<ul><li>Arduino <span class="wikiword">WiFi</span> Shield
</li><li>Shield-compatible Arduino board
</li><li>(optional) Six analog sensors attached to Analog in Pins 0-5
</li></ul><p class="vspace"></p></div>
<p class="vspace"></p><h3>Circuit</h3>
<div class="circuit">
<p class="vspace"></p><p>The <span class="wikiword">WiFi</span> shield uses pins 10, 11, 12, and 13 for the SPI connection to the <span class="wikiword">HDG104</span> module. Digital pin 4 is used to control the slave select pin on the SD card.
</p>
<p class="vspace"></p><p>You should have access to a 802.11b/g wireless 
network that connects to the internet for this example. You will need to
 change the network settings in the sketch to correspond to your 
particular networks SSID.
</p>
<p class="vspace"></p><p>For networks using <span class="wikiword">WPA/WPA2</span> Personal encryption, you need the SSID and password. The shield will not connect to networks using <span class="wikiword">WPA2</span> Enterprise encryption.
</p>
<p class="vspace"></p><p>WEP network passwords are hexadecimal strings 
known as keys. A WEP network can have 4 different keys; each key is 
assigned a "Key Index" value. For WEP encrypted networks, you need the 
SSID, the key, and key number.
</p>
<p class="vspace"></p><div><a class="urllink" href="https://www.arduino.cc/en/uploads/Tutorial/WiFiShield_bb.png" rel="nofollow"><img src="Arduino%20-%20WiFiWebServer_files/WiFiShield_bb.png" alt="" title="" height="300px"></a></div>
<p class="vspace"></p><p><span style="font-size:83%">image developed using <a class="urllink" href="http://www.fritzing.org/" rel="nofollow" target="_blank">Fritzing</a>. For more circuit examples, see the <a class="urllink" href="http://fritzing.org/projects/" rel="nofollow" target="_blank">Fritzing project page</a> </span>
</p>
<p class="vspace"></p><p><strong><em>In the above  image, the Arduino would be stacked below the <span class="wikiword">WiFi</span> shield.</em></strong>
</p>
<p class="vspace"></p></div>
<p class="vspace"></p><h4>Warning</h4>
<p>This example doesn't require an SD card. If an SD card is inserted 
but not used, it is possbile for the sketch to hang, because pin 4 is 
used as SS (active low) of the SD and when not used it is configured as 
INPUT by default. Two possible solutions:
</p><ul><li>remove the SD card;
</li><li>add these lines of code in the setup()
</li></ul><p class="vspace"></p><p>
</p><div class="sourceblock " id="sourceblock2">
  <div class="sourceblocktext"><div class="arduino"><span class="kw1">pinMode</span><span class="br0">(</span><span class="nu0">4</span><span class="sy0">,</span> <span class="kw2">OUTPUT</span><span class="br0">)</span><span class="sy0">;</span><br>
<span class="kw1">digitalWrite</span><span class="br0">(</span><span class="nu0">4</span><span class="sy0">,</span> <span class="kw2">HIGH</span><span class="br0">)</span><span class="sy0">;</span></div></div>
  <div class="sourceblocklink"><a href="https://www.arduino.cc/en/Tutorial/WiFiWebServer?action=sourceblock&amp;num=2" type="text/plain">[Get Code]</a></div>
</div>

<p></p>
<p class="vspace"></p><p><strong>Code:</strong>
</p>
<p class="vspace"></p><div class="code">
<p>
</p><div class="sourceblock " id="sourceblock1">
  <div class="sourceblocktext"><div class="arduino"><span class="coMULTI">/*<br>
&nbsp; WiFi Web Server<br>
&nbsp;<br>
&nbsp;A simple web server that shows the value of the analog input pins.<br>
&nbsp;using a WiFi shield.<br>
&nbsp;<br>
&nbsp;This example is written for a network using WPA encryption. For <br>
&nbsp;WEP or WPA, change the Wifi.begin() call accordingly.<br>
&nbsp;<br>
&nbsp;Circuit:<br>
&nbsp;* WiFi shield attached<br>
&nbsp;* Analog inputs attached to pins A0 through A5 (optional)<br>
&nbsp;<br>
&nbsp;created 13 July 2010<br>
&nbsp;by dlf (Metodo2 srl)<br>
&nbsp;modified 31 May 2012<br>
&nbsp;by Tom Igoe<br>
<br>
&nbsp;*/</span><br>
<br>
<span class="co2">#include &lt;SPI.h&gt;</span><br>
<span class="co2">#include &lt;WiFi.h&gt;</span><br>
<br>
<br>
<span class="kw1">char</span> ssid<span class="br0">[</span><span class="br0">]</span> <span class="sy0">=</span> <span class="st0">"yourNetwork"</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp;<span class="co1">// your network SSID (name) </span><br>
<span class="kw1">char</span> pass<span class="br0">[</span><span class="br0">]</span> <span class="sy0">=</span> <span class="st0">"secretPassword"</span><span class="sy0">;</span> &nbsp; <span class="co1">// your network password</span><br>
<span class="kw1">int</span> keyIndex <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// your network key Index number (needed only for WEP)</span><br>
<br>
<span class="kw1">int</span> status <span class="sy0">=</span> WL_IDLE_STATUS<span class="sy0">;</span><br>
<br>
WiFiServer server<span class="br0">(</span><span class="nu0">80</span><span class="br0">)</span><span class="sy0">;</span><br>
<br>
<span class="kw1">void</span> <span class="kw3">setup</span><span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; <span class="co1">//Initialize serial and wait for port to open:</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">begin</span><span class="br0">(</span><span class="nu0">9600</span><span class="br0">)</span><span class="sy0">;</span> <br>
&nbsp; <span class="kw1">while</span> <span class="br0">(</span><span class="sy0">!</span><span class="kw1">Serial</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; <span class="sy0">;</span> <span class="co1">// wait for serial port to connect. Needed for Leonardo only</span><br>
&nbsp; <span class="br0">}</span><br>
&nbsp; <br>
&nbsp; <span class="co1">// check for the presence of the shield:</span><br>
&nbsp; <span class="kw1">if</span> <span class="br0">(</span>WiFi.<span class="me1">status</span><span class="br0">(</span><span class="br0">)</span> <span class="sy0">==</span> WL_NO_SHIELD<span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"WiFi shield not present"</span><span class="br0">)</span><span class="sy0">;</span> <br>
&nbsp; &nbsp; <span class="co1">// don't continue:</span><br>
&nbsp; &nbsp; <span class="kw1">while</span><span class="br0">(</span><span class="kw1">true</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="br0">}</span> <br>
&nbsp; <br>
&nbsp; <span class="co1">// attempt to connect to Wifi network:</span><br>
&nbsp; <span class="kw1">while</span> <span class="br0">(</span> status <span class="sy0">!=</span> WL_CONNECTED<span class="br0">)</span> <span class="br0">{</span> <br>
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">(</span><span class="st0">"Attempting to connect to SSID: "</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span>ssid<span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; <span class="co1">// Connect to WPA/WPA2 network. Change this line if using open or WEP network: &nbsp; &nbsp;</span><br>
&nbsp; &nbsp; status <span class="sy0">=</span> WiFi.<span class="kw1">begin</span><span class="br0">(</span>ssid<span class="sy0">,</span> pass<span class="br0">)</span><span class="sy0">;</span><br>
<br>
&nbsp; &nbsp; <span class="co1">// wait 10 seconds for connection:</span><br>
&nbsp; &nbsp; <span class="kw1">delay</span><span class="br0">(</span><span class="nu0">10000</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="br0">}</span> <br>
&nbsp; server.<span class="kw1">begin</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="co1">// you're connected now, so print out the status:</span><br>
&nbsp; printWifiStatus<span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
<span class="br0">}</span><br>
<br>
<br>
<span class="kw1">void</span> <span class="kw3">loop</span><span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; <span class="co1">// listen for incoming clients</span><br>
&nbsp; WiFiClient client <span class="sy0">=</span> server.<span class="kw1">available</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">if</span> <span class="br0">(</span>client<span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"new client"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; <span class="co1">// an http request ends with a blank line</span><br>
&nbsp; &nbsp; <span class="kw1">boolean</span> currentLineIsBlank <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span><br>
&nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">(</span>client.<span class="kw1">connected</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">(</span>client.<span class="kw1">available</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">char</span> c <span class="sy0">=</span> client.<span class="kw1">read</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">write</span><span class="br0">(</span>c<span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// if you've gotten to the end of the line (received a newline</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// character) and the line is blank, the http request has ended,</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// so you can send a reply</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">(</span>c <span class="sy0">==</span> <span class="st0">'<span class="es1">\n</span>'</span> <span class="sy0">&amp;&amp;</span> currentLineIsBlank<span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// send a standard http response header</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"HTTP/1.1 200 OK"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"Content-Type: text/html"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"Connection: close"</span><span class="br0">)</span><span class="sy0">;</span> &nbsp;<span class="co1">// the connection will be closed after completion of the response</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"Refresh: 5"</span><span class="br0">)</span><span class="sy0">;</span> &nbsp;<span class="co1">// refresh the page automatically every 5 sec</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"&lt;!DOCTYPE HTML&gt;"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"&lt;html&gt;"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// output the value of each analog input pin</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">for</span> <span class="br0">(</span><span class="kw1">int</span> analogChannel <span class="sy0">=</span> <span class="nu0">0</span><span class="sy0">;</span> analogChannel <span class="sy0">&lt;</span> <span class="nu0">6</span><span class="sy0">;</span> analogChannel<span class="sy0">++</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">int</span> sensorReading <span class="sy0">=</span> <span class="kw1">analogRead</span><span class="br0">(</span>analogChannel<span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">print</span><span class="br0">(</span><span class="st0">"analog input "</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">print</span><span class="br0">(</span>analogChannel<span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">print</span><span class="br0">(</span><span class="st0">" is "</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">print</span><span class="br0">(</span>sensorReading<span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"&lt;br /&gt;"</span><span class="br0">)</span><span class="sy0">;</span> &nbsp; &nbsp; &nbsp; <br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; client.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"&lt;/html&gt;"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<span class="kw1">break</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">if</span> <span class="br0">(</span>c <span class="sy0">==</span> <span class="st0">'<span class="es1">\n</span>'</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// you're starting a new line</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; currentLineIsBlank <span class="sy0">=</span> <span class="kw1">true</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span> <br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="kw1">else</span> <span class="kw1">if</span> <span class="br0">(</span>c <span class="sy0">!=</span> <span class="st0">'<span class="es1">\r</span>'</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <span class="co1">// you've gotten a character on the current line</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; currentLineIsBlank <span class="sy0">=</span> <span class="kw1">false</span><span class="sy0">;</span><br>
&nbsp; &nbsp; &nbsp; &nbsp; <span class="br0">}</span><br>
&nbsp; &nbsp; &nbsp; <span class="br0">}</span><br>
&nbsp; &nbsp; <span class="br0">}</span><br>
&nbsp; &nbsp; <span class="co1">// give the web browser time to receive the data</span><br>
&nbsp; &nbsp; <span class="kw1">delay</span><span class="br0">(</span><span class="nu0">1</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; <br>
&nbsp; &nbsp; <span class="co1">// close the connection:</span><br>
&nbsp; &nbsp; client.<span class="kw1">stop</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span><span class="st0">"client disonnected"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="br0">}</span><br>
<span class="br0">}</span><br>
<br>
<br>
<span class="kw1">void</span> printWifiStatus<span class="br0">(</span><span class="br0">)</span> <span class="br0">{</span><br>
&nbsp; <span class="co1">// print the SSID of the network you're attached to:</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">(</span><span class="st0">"SSID: "</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span>WiFi.<span class="me1">SSID</span><span class="br0">(</span><span class="br0">)</span><span class="br0">)</span><span class="sy0">;</span><br>
<br>
&nbsp; <span class="co1">// print your WiFi shield's IP address:</span><br>
&nbsp; IPAddress ip <span class="sy0">=</span> WiFi.<span class="me1">localIP</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">(</span><span class="st0">"IP Address: "</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span>ip<span class="br0">)</span><span class="sy0">;</span><br>
<br>
&nbsp; <span class="co1">// print the received signal strength:</span><br>
&nbsp; <span class="kw1">long</span> rssi <span class="sy0">=</span> WiFi.<span class="me1">RSSI</span><span class="br0">(</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">(</span><span class="st0">"signal strength (RSSI):"</span><span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">(</span>rssi<span class="br0">)</span><span class="sy0">;</span><br>
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">(</span><span class="st0">" dBm"</span><span class="br0">)</span><span class="sy0">;</span><br>
<span class="br0">}</span></div></div>
  <div class="sourceblocklink"><a href="https://www.arduino.cc/en/Tutorial/WiFiWebServer?action=sourceblock&amp;num=1" type="text/plain">[Get Code]</a></div>
</div>

<p></p></div>
<p class="vspace"></p><h3>See Also:</h3>
<ul><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/ConnectNoEncryption">ConnectNoEncryption</a> : Demonstrates how to connect to an open network
</li><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/ConnectWithWEP">ConnectWithWEP</a> : Demonstrates how to connect to a network that is encrypted with WEP
</li><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/ConnectWithWPA">ConnectWithWPA</a> : Demonstrates how to connect to a network that is encrypted with <span class="wikiword">WPA2</span> Personal
</li><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/ScanNetworks">ScanNetworks</a> : Displays all <span class="wikiword">WiFi</span> networks in range
</li><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/WiFiChatServer">WiFiChatServer</a> : Set up a simple chat server
</li><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/WiFiWebClient">WiFiWebClient</a> : Connect to a remote webserver
</li><li><a class="wikilink" href="https://www.arduino.cc/en/Tutorial/WiFiWebClientRepeating">WiFiWebClientRepeating</a>: Repeatedly make HTTP calls to a server
</li><li><a class="selflink" href="https://www.arduino.cc/en/Tutorial/WiFiWebServer">WiFiWebServer</a> : Serve a webpage from the <span class="wikiword">WiFi</span> shield
</li></ul>
</div>

				
				<!-- AddThis Button Style BEGIN -->
<style>
  .addthis_toolbox {
    margin: 2em 0 1em;
  }
  .addthis_toolbox img {
    float: left;
    height: 25px;
    margin-right: 10px;
    width: auto;
  }
  .addthis_toolbox .social-container {
    float: left;
    height: 27px; 
    width: auto; 
  }
  .addthis_toolbox .social-container .social-content {
    float: left;
    margin-top: 2px;
    max-width: 0;
    overflow: hidden;
    -moz-transition: max-width .3s ease-out;
    -webkit-transition: max-width .3s ease-out;
    -o-transition: max-width .3s ease-out;
    transition: max-width .3s ease-out;
  }
  .addthis_toolbox .social-container:hover .social-content {
    max-width: 100px;
    -moz-transition: max-width .2s ease-in;
    -webkit-transition: max-width .2s ease-in;
    -o-transition: max-width .2s ease-in;
    transition: max-width .2s ease-in;
  }
  .addthis_toolbox .social-container .social-content a {
    float: left;
    margin-right: 5px;
  }

  .addthis_toolbox h3 {
    font-size: 24px;
    text-align: left;
  }
</style>
<!-- AddThis Button Style END -->
<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style">
  <h3>Share</h3>
  <!-- FACEBOOK -->
  <div class="social-container">
    <img src="Arduino%20-%20WiFiWebServer_files/facebook_002.png" class="vbryqqxrvovtnqjvtwfj">
    <div class="social-content">
      <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
    </div>
  </div>
  <!-- TWITTER -->
  <div class="social-container">
    <img src="Arduino%20-%20WiFiWebServer_files/twitter_002.png" class="vbryqqxrvovtnqjvtwfj">
    <div class="social-content">
      <a class="addthis_button_tweet"></a>
    </div>
  </div>
  <!-- PINTEREST -->
  <div class="social-container">
    <img src="Arduino%20-%20WiFiWebServer_files/pinterest.png" class="vbryqqxrvovtnqjvtwfj">
    <div class="social-content">
      <a class="addthis_button_pinterest_pinit" pi:pinit:url="//www.addthis.com/features/pinterest" pi:pinit:media="//www.addthis.com/cms-content/images/features/pinterest-lg.png"></a>
    </div>
  </div>
  <!-- G+ -->
  <div class="social-container">
    <img src="Arduino%20-%20WiFiWebServer_files/gplus_002.png" class="vbryqqxrvovtnqjvtwfj">
    <div class="social-content">
      <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
    </div>
  </div>

  <script type="text/javascript">var addthis_config = {"data_track_addressbar":false};</script>
  <script type="text/javascript" src="Arduino%20-%20WiFiWebServer_files/addthis_widget.js"></script>
</div>
<!-- AddThis Button END -->

		</div> <!-- eof pagetext -->
	
	</div> <!-- eof page -->
		
	<!--PageFooterFmt-->
	<div id="pagefooter">
		<div id="newsletterModal" class="reveal-modal small">
  <form action="//www.arduino.cc/subscribe.php" method="post" name="sendy-subscribe-form" id="sendy-subscribe-form" class="form-popup">
    <div class="modalHeader">
      <h3 style="line-height: 1.8rem;" class="modal-header-alt">This link has expired. <br>Please re-subscribe to our Newsletters.</h3>
      <h3 class="modal-header-main">Subscribe to our Newsletters</h3>
    </div>
    <div class="modalBody" id="newsletterModalBody">
        <div id="newsletterEmailField" class="row" style="padding-left: 0">
          <div class="large-2 columns">
            <label for="email" class="newsletter-form-label inline">Email</label>
          </div>
          <div class="large-10 columns" style="padding-left: 0">
            <input placeholder="Enter your email address" name="email" class="subscribe-form-input" type="email">
            <p id="emailMissing" class="newsletterPopupError">Please enter a valid email to subscribe</p>
          </div>
        </div>
        <div style="margin-left:20px">
          <div style="margin-bottom:0.3em">
            <input style="display:none" checked="checked" name="list[]" value="arduino_newsletter_id" id="worldwide" class="newsletter-form-checkbox" type="checkbox">
            <label for="worldwide"></label>
            <div style="display:inline-block" class="newsletter-form-label">Arduino Newsletter</div>
          </div>
          <div style="margin-bottom:0.3em">
            <input style="display:none" checked="checked" name="list[]" value="arduino_store_newsletter_id" id="store" class="newsletter-form-checkbox" type="checkbox">
            <label for="store"></label>
            <div style="display:inline-block" class="newsletter-form-label">Arduino Store Newsletter</div>
          </div>
          <div>
            <input style="display:none" name="list[]" value="arduino_italians_newsletter_id" id="italians" class="newsletter-form-checkbox" type="checkbox">
            <label for="italians"></label>
            <div style="display:inline-block" class="newsletter-form-label">Newsletter Italiana</div>
          </div>
        </div>
        <div>
          <p class="newsletterPopupError2" id="newsletterSubscribeStatus"></p>
        </div>
    </div>
    <div class="row modalFooter">
      <div class="form-buttons-row">
        
          <button type="button" value="Cancel" class="popup-form-button white cancel-modal close-reveal-modal">Cancel</button>
          <button type="submit" name="Subscribe" id="subscribe-submit-btn" class="popup-form-button">Next</button>
        
      </div>
    </div>
  </form>

  <!-- step 2, confirm popup -->
  <div class="confirm-popup" style="margin-bottom:1em">
    <div class="modalHeader">
      <h3>Confirm your email address</h3>
    </div>
    <div class="modalBody" id="newsletterModalBody" style="padding-right:1em;margin-bottom:0">
        <p style="margin-bottom:1em;font-size:15px">
          We need to confirm your email address.<br>
          To complete the subscription, please click the link in the
          email we just sent you.
        </p>
        <p style="margin-bottom:1em;font-size:15px">
          Thank you for subscribing!
        </p>
        <p style="margin-bottom:1em;font-size:15px">
          Arduino<br>
          via Egeo 16<br>
          Torino, 10131<br>
          Italy<br>
        </p>
    </div>
    <div class="row modalFooter">
      <div class="form-buttons-row">
        
          <button name="Ok" class="popup-form-button" id="close-confirm-popup">Ok</button>

      </div>
    </div>
  </div>

</div>
<div id="pagefooter" class="pagefooter">
  <div class="row">
    <div class="large-8 eight columns">
      <div class="large-4 four columns newsletter-box">
        <!-- Begin Sendy Signup Form -->
        <h6>Newsletter</h6>
        <div>
          <input name="email" class="email" id="sendy-EMAIL" placeholder="Enter your email to sign up" type="email">
          <i class="icon-right-small"></i>
          <input value="Subscribe" name="subscribe" id="sendy-subscribe" class="newsletter-button">
        </div>
        <!--End sendy_embed_signup-->
      </div>
      <div class="clearfix"></div>
      <ul class="inline-list">
        <li class="monospace">©2016 Arduino</li>
        <li><a href="https://www.arduino.cc/en/Main/CopyrightNotice">Copyright Notice</a></li>
        <li><a href="https://www.arduino.cc/en/Main/ContactUs">Contact us</a></li>
        <li><a href="https://www.arduino.cc/en/Main/AboutUs">About us</a></li>
        <li><a href="https://www.arduino.cc/Careers">Careers</a></li>
      </ul>
    </div>
    <div class="large-4 four columns">
      <ul id="arduinoSocialLinks" class="arduino-social-links">
        <li>
          <a href="https://twitter.com/arduino" target="_blank">
            <img src="Arduino%20-%20WiFiWebServer_files/twitter.png" class="vbryqqxrvovtnqjvtwfj">
          </a>
        </li>
        <li>
          <a href="https://www.facebook.com/official.arduino" target="_blank">
            <img src="Arduino%20-%20WiFiWebServer_files/facebook.png" class="vbryqqxrvovtnqjvtwfj">
          </a>
        </li>
        <li>
          <a href="https://plus.google.com/+Arduino" target="_blank">
            <img src="Arduino%20-%20WiFiWebServer_files/gplus.png" class="vbryqqxrvovtnqjvtwfj">
          </a>
        </li>
        <li>
          <a href="https://www.flickr.com/photos/arduino_cc" target="_blank">
            <img src="Arduino%20-%20WiFiWebServer_files/flickr.png">
          </a>
        </li>
        <li>
          <a href="https://youtube.com/arduinoteam" target="_blank">
            <img src="Arduino%20-%20WiFiWebServer_files/youtube.png" class="vbryqqxrvovtnqjvtwfj">
          </a>
        </li>
      </ul>
    </div>
  </div>
</div>

	</div>
	<!--/PageFooterFmt-->
	
	<!--[if gte IE 9]><!-->
	<script src="Arduino%20-%20WiFiWebServer_files/foundation_002.js"></script>
	<script src="Arduino%20-%20WiFiWebServer_files/foundation.js"></script>
	<script>
	  $(document).foundation();
	</script>
	<!--<![endif]-->
	<!--[if IE 8]>
	<script src="//arduino.cc/js/foundation_ie8.min.js"></script>
	<script src="//arduino.cc/js/ie8/jquery.foundation.orbit.js"></script>
	<script src="//arduino.cc/js/ie8/jquery.foundation.alerts.js"></script>
	<script src="//arduino.cc/js/app.js"></script>
	
	<script>
	$(window).load(function(){
	  $("#featured").orbit();
	});
	</script>
	<![endif]-->
	
	<script type="text/javascript">
	  var _gaq = _gaq || [];
	  _gaq.push(['_setAccount', 'UA-22581631-3']);
	  _gaq.push(['_setDomainName', 'arduino.cc']);
	  _gaq.push(['_trackPageview']);
	
	    (function() {
	    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
	    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
	    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
	  })();
	</script>

	<script>
	  $(window).load(function(){
	    $('a').each (function () {
	      href = $(this).attr ('href');
	      if (href !== undefined && href.substring (0, 4) == 'http' && href.indexOf ('arduino.cc') == -1)
	        $(this).attr ('target', '_blank');
	    });

	    // js for language dropdown
	    $('.language-dropdown .current').on('click', function(e){
          e.stopPropagation();
          $('.language-dropdown ul').toggle();
        });

        $('.language-dropdown .selector').on('click', function(e){
          e.stopPropagation();
          $('.language-dropdown ul').toggle();
        });

        $(document).on('click', function(){
          $('.language-dropdown ul:visible').hide();  
        });

        $('.language-dropdown li a').on('click', function(e){
        	$('.language-dropdown .current').text($(this).text());
        });

        //js for product pages navbar
        var menu = $(".product-page-nav");
	    var menuItems = menu.find("a");
	    var timeoutId = null;
	    var limitTop = 600;

	    var menuOffset = $('.product-page-nav li').first().offset();
	    if(menuOffset) {
	    	limitTop = menuOffset.top;
	    }
	    var limitBottom = $('.addthis_toolbox').offset().top;

	    var activateSection = function($sectionToActivate) {
	      var label=$sectionToActivate.attr('label');

	      $(".product-page-nav").find('li').removeClass('active');
	      $sectionToActivate.addClass('active');
	    };

	    menuItems.click(function(e){

	     e.preventDefault();
	      var href = $(this).attr("href"),
	          offsetTop = href === "#" ? 0 : $(href).offset().top,
	          adjust = 0;
	      if($(this).parent('li').hasClass('active') === false) {

	          adjust = 80;

	          $('html, body').animate({
	                scrollTop: offsetTop - adjust
	            }, 1500, 'easeOutExpo');

	      }
	    });

	    $(window).scroll(function () {

	      var windscroll = $(window).scrollTop();

	      if(windscroll < limitTop) {
	        $('.menu').removeClass('sticky');
	        $('.menu').removeClass('fixed');
	      }  else {
	        $('.menu').addClass('sticky');
	      }

	      var menuEdgeBottomOffset = $('.menu.columns').offset();
	      var menuEdgeBottom = 0;
	      if(menuEdgeBottomOffset) {
	      	menuEdgeBottom = menuEdgeBottomOffset.top + $('.menu.columns').height();
	      }
	      if(menuEdgeBottom > limitBottom) {
	        $('.menu').fadeOut();
	      } else {
	        $('.menu').fadeIn();
	      }
	      menuItems.each(function(i) {
	        var href = $(this).attr("href");
	        if ($(href).offset().top <= windscroll + 150) {
	          if(timeoutId) {
	            clearTimeout(timeoutId);
	          }
	          timeoutId = setTimeout(activateSection, 60, $(".product-page-nav").find('li').eq(i));
	        }
	      });

	    });

	  });
	
		//Facebook Pixel Code
		!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
		n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
		n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
		t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
		document,'script','https://connect.facebook.net/en_US/fbevents.js');

		fbq('init', '1205220922863531');
		fbq('track', "PageView");
		
	</script>

	<noscript><img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=1205220922863531&ev=PageView&noscript=1"/></noscript>
	<!-- End Facebook Pixel Code -->


<iframe allowtransparency="true" style="z-index: 2147483647; display: none; background: rgba(0, 0, 0, 0.004) none repeat scroll 0% 0%; border: 0px none transparent; overflow-x: hidden; overflow-y: auto; visibility: visible; margin: 0px; padding: 0px; position: fixed; left: 0px; top: 0px; width: 100%; height: 100%;" src="Arduino%20-%20WiFiWebServer_files/cqlJY5qYEucOvSq2TBE8A.htm" name="stripe_checkout_app" class="stripe_checkout_app" frameborder="0"></iframe></body></html>